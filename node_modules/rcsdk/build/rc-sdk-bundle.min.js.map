{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk-bundle.js","webpack/bootstrap 897468481a53b0443cf1","src/lib/RCSDK.ts","src/lib/core/pubnub/PubnubMock.ts","src/lib/core/Observable.ts","src/lib/core/Utils.ts","src/lib/core/Log.ts","src/lib/core/xhr/XhrMock.ts","src/lib/core/xhr/XhrResponse.ts","src/lib/core/AjaxObserver.ts","src/lib/core/Cache.ts","src/lib/core/Context.ts","src/lib/core/Helper.ts","src/lib/core/List.ts","src/lib/core/PageVisibility.ts","src/lib/core/Platform.ts","src/lib/core/http/Request.ts","src/lib/core/http/Headers.ts","src/lib/core/http/Response.ts","src/lib/core/Subscription.ts","src/lib/core/Validator.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Extension.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Conferencing.ts","src/lib/helpers/Country.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/State.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/Timezone.ts","bower_components/es6-promise-polyfill/promise.js","~/timers-browserify/main.js","~/process/browser.js","bower_components/pubnub/web/pubnub.js","(webpack)/buildin/module.js","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_45__","__WEBPACK_EXTERNAL_MODULE_46__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","PubnubFactory","__extends","d","b","__","constructor","hasOwnProperty","Object","create","PubnubMock","_super","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","defineProperty","value","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","events","callback","_this","self","forEach","push","isOneTimeEventFired","debug","apply","getOneTimeEventArgumens","args","_i","arguments","length","result","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","cb","i","offAll","destroy","emitAndCallback","argumentsToArray","concat","createSingleton","Utils","hasOwn","toString","rdigit","class2type","split","name","toLowerCase","extend","targetObject","sourceObject","src","copy","copyIsArray","clone","target","deep","isFunction","isPlainObject","isArray","undefined","object","res","queryStringify","parameters","array","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","indexOf","trim","pair","key","isEmail","multiple","test","isPhoneNumber","Array","slice","isDate","obj","type","isWindow","isNaN","String","nodeType","getProperty","property","reduce","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","Log","console","warn","info","error","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","XhrMock","responses","async","method","requestHeaders","withCredentials","data","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","send","contentType","getRequestHeader","JSON","parse","currentResponse","find","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","bind","abort","XhrResponse","add","clear","ajax","path","AjaxObserver","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","setItem","removeItem","getItem","item","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","Helper","defaultProperty","createUrl","getId","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","map","loadRequest","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","a","localeCompare","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","opt","filterBy","filterFn","pass","PageVisibility","change","hidden","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","secret","remember","getAuthURL","apiUrl","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","code","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","match","boundarySeparator","pop","statusInfo","stack","description","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","remove","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Conferencing","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","device","sku","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","State","countryId","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","Timezone","__WEBPACK_AMD_DEFINE_RESULT__","global","setImmediate","asyncFlush","asyncQueue","asyncTimer","asyncCall","asyncSetTimer","invokeResolver","resolver","resolvePromise","rejectPromise","reason","invokeCallback","subscriber","owner","settled","state_","data_","FULFILLED","handleThenable","REJECTED","resolved","TypeError","val","fulfill","PENDING","SEALED","publishFulfillment","publishRejection","publish","then_","NativePromise","nativePromiseSupported","NOOP","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","Class","remaining","results","race","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","Function","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","fun","noop","process","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask","toJSON","valueOf","quote","escapable","lastIndex","meta","charCodeAt","str","holder","k","partial","mind","gap","rep","isFinite","indent","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","","eval","unique","NOW","rnow","build_url","url_components","url_params","URLBIT","params","each","value_str","encode","PARAMSBIT","updater","rate","last","runnit","grep","fin","l","supplant","values","REPL","_","wait","generate_uuid","u","random","o","pam_encode","generate_channel_list","channels","nopresence","subscribed","sort","generate_channel_group_list","channel_groups","channel_group","READY","READY_BUFFER","SECOND","PN_API","setup","_get_url_params","_object_to_key_list","_object_to_key_list_sorted","_get_pam_sign_input_from_params","si","validate_presence_heartbeat","heartbeat","cur_heartbeat","err","PRESENCE_HB_THRESHOLD","PRESENCE_HB_DEFAULT","encrypt","input","CIPHER_KEY","_presence_heartbeat","PRESENCE_HB_TIMEOUT","PRESENCE_HB_INTERVAL","CHANNELS","CHANNEL_GROUPS","PRESENCE_HB_RUNNING","SELF","start_presence_heartbeat","NO_WAIT_FOR_PENDING","PUB_QUEUE","sending","xdr","each_channel_group","count","chang","each_channel","chan","_invoke_callback","callback_data","_invoke_error","CR","url1","jsonp","jsonp_cb","AUTH_KEY","STD_ORIGIN","SUBSCRIBE_KEY","success","fail","_poll_online","_is_online","_reset_offline","_poll_timer","_poll_online2","TIME_CHECK","detect_time_detla","_poll_timer2","KEEPALIVE","SUB_RECEIVER","detect_latency","tt","adjusted_time","TIME_DRIFT","time","calculate","ptime","latency","stime","SUB_WINDOWING","DEF_WINDOWING","SUB_TIMEOUT","DEF_SUB_TIMEOUT","DEF_KEEPALIVE","NOLEAVE","PUBLISH_KEY","SECRET_KEY","hmac_SHA256","SSL","ORIGIN","nextorigin","SUB_ORIGIN","CONNECT","CLOAK","SUB_CALLBACK","SUB_CHANNEL","SUB_RESTORE","TIMETOKEN","RESUMED","STATE","PRESENCE_HB","COMPATIBLE_35","db","set","UUID","USE_INSTANCEID","INSTANCEID","shutdown","use_send_beacon","sendBeacon","LEAVE","blocking","auth_key","uuid","auth","origin","PRESENCE_SUFFIX","url_string","service","LEAVE_GROUP","set_resumed","resumed","get_cipher_key","set_cipher_key","raw_encrypt","raw_decrypt","get_heartbeat","set_heartbeat","heartbeat_interval","get_heartbeat_interval","set_heartbeat_interval","get_version","SDK_VER","getGcmMessageObject","getApnsMessageObject","x","aps","badge","alert","newPnMessage","gcm","apns","_add_param","namespace","ns_ch","cloak","ns_ch_a","channel_group_list_groups","channel_group_list_channels","channel_group_remove_channel","channel_group_remove_group","channel_group_add_channel","channel_group_cloak","channel_group_list_namespaces","channel_group_remove_namespace","history","cipher_key","start","end","include_token","string_msg_token","payload","decrypted_messages","new_message","timetoken","replay","source","destination","stop","limit","store","add_msg","leave_c","ch","CB_CALLED","leave_gc","chg","_test_connection","windowing","disconnected","reconnect","disconnect","_connect","st","sub_timeout","SUB_ERROR","idlecb","connected","backfill","next_callback","channels2","list2","channel2","chobj","decrypted_msg","noheresync","restore","settings","here","uid","timestamp","occupancy","here_now","uuids","where_now","grant","ttl","w","sign_input","signature","mobile_gw_provision","op","gw_type","device_id","audit","revoke","set_uuid","get_uuid","get_subscibed_channels","presence_heartbeat","stop_timers","each-channel","offline","SHA256","CryptoJS","parse_options","defaultOptions","allowedKeyEncodings","allowedKeyLengths","allowedModes","decode_key","get_padded_key","get_mode","get_iv","iv","hex_message","encryptedHexArray","base_64_encrypted","binary_enc","json_plain","ciphertext","plaintext","get_hmac_SHA256","hash","$","getElementById","elements","el","getElementsByTagName","node","etype","rapfun","cancelBubble","preventDefault","stopPropagation","attachEvent","head","attr","attribute","setAttribute","getAttribute","css","element","styles","style","createElement","XORIGN","FDomainRequest","script","finished","xhrtme","DEF_TIMEOUT","timer","done","append","appendChild","failed","parentNode","removeChild","ASYNC","complete","XDomainRequest","onabort","onloadend","onreadystatechange","eee","navigator","pubnubs","fdomainrequest","ori","failover","SWF","UA","userAgent","PNSDK","opera","postError","ls","cookieGet","cookie","cookieSet","cookieTest","unbind","fire","PDIV","CREATE_PUBNUB","leave_on_unload","pnsdk","PN","prop","pdiv","notest","publish_key","location","href","position","top","unescape","WS","protocols","bits","protocol","wasClean","g","lib","q","Base","mixIn","$super","WordArray","words","sigBytes","clamp","ceil","enc","Hex","substr","Latin1","fromCharCode","j","Utf8","escape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","_minBufferSize","_doProcessBlock","splice","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","t","HMAC","algo","sqrt","pow","_hash","HmacSHA256","_hasher","_oKey","_iKey","Base64","_map","charAt","sin","MD5","z","A","B","C","D","E","HmacMD5","EvpKDF","keySize","hasher","iterations","compute","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","_key","ivSize","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","CBC","pad","Pkcs7","unpad","BlockCipher","padding","_mode","CipherParams","formatter","format","OpenSSL","salt","SerializableCipher","algorithm","_parse","kdf","execute","PasswordBasedCipher","F","G","y","H","AES","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","ECB","offset","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"rc-sdk-bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_46__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(1);\nvar xhrMock = __webpack_require__(5);\nvar xhrResponse = __webpack_require__(6);\nvar ajaxObserver = __webpack_require__(7);\nvar cache = __webpack_require__(8);\nvar context = __webpack_require__(9);\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar log = __webpack_require__(4);\nvar observable = __webpack_require__(2);\nvar pageVisibility = __webpack_require__(12);\nvar platform = __webpack_require__(13);\nvar subscription = __webpack_require__(17);\nvar utils = __webpack_require__(3);\nvar validator = __webpack_require__(18);\nvar accountHelper = __webpack_require__(19);\nvar blockedNumberHelper = __webpack_require__(20);\nvar callHelper = __webpack_require__(21);\nvar contactHelper = __webpack_require__(24);\nvar contactGroupHelper = __webpack_require__(25);\nvar conferencingHelper = __webpack_require__(26);\nvar countryHelper = __webpack_require__(27);\nvar deviceHelper = __webpack_require__(28);\nvar deviceModelHelper = __webpack_require__(29);\nvar extensionHelper = __webpack_require__(23);\nvar forwardingNumberHelper = __webpack_require__(30);\nvar languageHelper = __webpack_require__(31);\nvar locationHelper = __webpack_require__(32);\nvar messageHelper = __webpack_require__(34);\nvar phoneNumberHelper = __webpack_require__(35);\nvar presenceHelper = __webpack_require__(22);\nvar ringoutHelper = __webpack_require__(36);\nvar serviceHelper = __webpack_require__(37);\nvar shippingMethodHelper = __webpack_require__(38);\nvar stateHelper = __webpack_require__(33);\nvar timezoneHelper = __webpack_require__(39);\nvar promise = __webpack_require__(40);\nvar pubnub = __webpack_require__(43);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.2';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(45)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : (promise.Promise || promise),\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(46))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(2);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar log = __webpack_require__(4);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(3);\nvar log = __webpack_require__(4);\nvar xhrResponse = __webpack_require__(6); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(2);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(2);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(2);\nvar cache = __webpack_require__(8);\nvar request = __webpack_require__(14);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = __webpack_require__(15);\nvar ajaxObserver = __webpack_require__(7);\nvar r = __webpack_require__(16);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = __webpack_require__(15);\nvar log = __webpack_require__(4);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(2);\nvar platform = __webpack_require__(13);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        this.utils.poll(function (next) {\n            if (Date.now() < _this.expireTime) {\n                return next();\n            }\n            _this.renew();\n        }, Subscription.pollInterval, this.timeout);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        this.utils.stopPolling(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.expireTime = Date.now() + (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    Subscription.pollInterval = 10 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar presence = __webpack_require__(22);\nvar contact = __webpack_require__(24);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar subscription = __webpack_require__(17);\nvar extension = __webpack_require__(23);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar list = __webpack_require__(11);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar extension = __webpack_require__(23);\nvar deviceModel = __webpack_require__(29);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar state = __webpack_require__(33);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar country = __webpack_require__(27);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar validator = __webpack_require__(18);\nvar subscription = __webpack_require__(17);\nvar platform = __webpack_require__(13);\nvar contact = __webpack_require__(24);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar extension = __webpack_require__(23);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(10);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, setImmediate) {(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = nativePromiseSupported ? NativePromise : Promise;\n}\nelse\n{\n  // AMD\n  if (true)\n  {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\n      return nativePromiseSupported ? NativePromise : Promise;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  else\n  {\n    // in browser add to global\n    if (!nativePromiseSupported)\n      global['Promise'] = Promise;\n  }\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : typeof self != 'undefined' ? self : this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(41).setImmediate))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(42).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).setImmediate, __webpack_require__(41).clearImmediate))\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// Version: 3.7.16\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.16'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']\n    ,   SUBSCRIBE_KEY = setup['subscribe_key']\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID    = ''\n    ,   shutdown      = setup['shutdown']\n    ,   use_send_beacon = (typeof setup['use_send_beacon'] != 'undefined')?setup['use_send_beacon']:true\n    ,   sendBeacon    = (use_send_beacon)?setup['sendBeacon']:null\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   url\n            ,   params\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            url = [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ];\n\n            params = _get_url_params(data);\n\n\n            if (sendBeacon) {\n                url_string = build_url(url, params);\n                if (sendBeacon(url_string)) {\n                    callback && callback({\"status\": 200, \"action\": \"leave\", \"message\": \"OK\", \"service\": \"Presence\"});\n                    return true;\n                }\n            }\n\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   url\n            ,   params\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            url = [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n            ];\n\n            params = _get_url_params(data);\n\n            if (sendBeacon) {\n                url_string = build_url(url, params);\n                if (sendBeacon(url_string)) {\n                    callback && callback({\"status\": 200, \"action\": \"leave\", \"message\": \"OK\", \"service\": \"Presence\"});\n                    return true;\n                }\n            }\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   string_msg_token = args['string_message_token'] || false\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n            if (string_msg_token) params['string_message_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        if (include_token) {\n                            var new_message = decrypt(messages[a]['message'],cipher_key);\n                            var timetoken = messages[a]['timetoken'];\n                            try {\n                                decrypted_messages['push']({\"message\" : JSON['parse'](new_message), \"timetoken\" : timetoken});\n                            } catch (e) {\n                                decrypted_messages['push'](({\"message\" : new_message, \"timetoken\" : timetoken}));\n                            }\n                        } else {\n                            var new_message = decrypt(messages[a],cipher_key);\n                            try {\n                                decrypted_messages['push'](JSON['parse'](new_message));\n                            } catch (e) {\n                                decrypted_messages['push']((new_message));\n                            }     \n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   params\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            SUB_RESTORE = 1;   // REVISIT !!!!\n\n            if (channel) {\n\n                // Prepare LeaveChannel(s)\n                var leave_c = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel;\n                } ).join(',');\n\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each(channel.split(','), function(ch) {\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                } );\n\n                var CB_CALLED = true;\n                if (READY) {\n                    CB_CALLED = SELF['LEAVE'](leave_c, 0 , auth_key, callback, err);\n                }\n                if (!CB_CALLED) callback({action : \"leave\"});\n            }\n\n            if (channel_group) {\n\n                // Prepare channel group(s)\n                var leave_gc = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group;\n                } ).join(',');\n\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                } );\n\n                var CB_CALLED = true;\n                if (READY) {\n                    CB_CALLED = SELF['LEAVE_GROUP'](leave_gc, 0 , auth_key, callback, err);\n                }\n                if (!CB_CALLED) callback({action : \"leave\"});\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, windowing);\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   debug    = args['debug']\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                debug    : debug,\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   params\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n            clearTimeout(PRESENCE_HB_TIMEOUT);\n        },\n        'shutdown': function () {\n            SELF['stop_timers']();\n            shutdown && shutdown();\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.16'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n\nfunction sendBeacon(url) {\n    if (!('sendBeacon' in navigator)) return false;\n\n    return navigator['sendBeacon'](url);\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['sendBeacon'] = sendBeacon;\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)(module)))\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_46__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 897468481a53b0443cf1\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.2';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : (promise.Promise || promise),\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK.ts\n ** module id = 0\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/pubnub/PubnubMock.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 4\n ** module chunks = 0\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrMock.ts\n ** module id = 5\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrResponse.ts\n ** module id = 6\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Cache.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Context.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/PageVisibility.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        this.utils.poll(function (next) {\n            if (Date.now() < _this.expireTime) {\n                return next();\n            }\n            _this.renew();\n        }, Subscription.pollInterval, this.timeout);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        this.utils.stopPolling(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.expireTime = Date.now() + (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    Subscription.pollInterval = 10 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 39\n ** module chunks = 0\n **/","(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = nativePromiseSupported ? NativePromise : Promise;\n}\nelse\n{\n  // AMD\n  if (typeof define == 'function' && define.amd)\n  {\n    define(function(){\n      return nativePromiseSupported ? NativePromise : Promise;\n    });\n  }\n  else\n  {\n    // in browser add to global\n    if (!nativePromiseSupported)\n      global['Promise'] = Promise;\n  }\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : typeof self != 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/es6-promise-polyfill/promise.js\n ** module id = 40\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 41\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 42\n ** module chunks = 0\n **/","// Version: 3.7.16\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.16'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']\n    ,   SUBSCRIBE_KEY = setup['subscribe_key']\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID    = ''\n    ,   shutdown      = setup['shutdown']\n    ,   use_send_beacon = (typeof setup['use_send_beacon'] != 'undefined')?setup['use_send_beacon']:true\n    ,   sendBeacon    = (use_send_beacon)?setup['sendBeacon']:null\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   url\n            ,   params\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            url = [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ];\n\n            params = _get_url_params(data);\n\n\n            if (sendBeacon) {\n                url_string = build_url(url, params);\n                if (sendBeacon(url_string)) {\n                    callback && callback({\"status\": 200, \"action\": \"leave\", \"message\": \"OK\", \"service\": \"Presence\"});\n                    return true;\n                }\n            }\n\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   url\n            ,   params\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            url = [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n            ];\n\n            params = _get_url_params(data);\n\n            if (sendBeacon) {\n                url_string = build_url(url, params);\n                if (sendBeacon(url_string)) {\n                    callback && callback({\"status\": 200, \"action\": \"leave\", \"message\": \"OK\", \"service\": \"Presence\"});\n                    return true;\n                }\n            }\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   string_msg_token = args['string_message_token'] || false\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n            if (string_msg_token) params['string_message_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        if (include_token) {\n                            var new_message = decrypt(messages[a]['message'],cipher_key);\n                            var timetoken = messages[a]['timetoken'];\n                            try {\n                                decrypted_messages['push']({\"message\" : JSON['parse'](new_message), \"timetoken\" : timetoken});\n                            } catch (e) {\n                                decrypted_messages['push'](({\"message\" : new_message, \"timetoken\" : timetoken}));\n                            }\n                        } else {\n                            var new_message = decrypt(messages[a],cipher_key);\n                            try {\n                                decrypted_messages['push'](JSON['parse'](new_message));\n                            } catch (e) {\n                                decrypted_messages['push']((new_message));\n                            }     \n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   params\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            SUB_RESTORE = 1;   // REVISIT !!!!\n\n            if (channel) {\n\n                // Prepare LeaveChannel(s)\n                var leave_c = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel;\n                } ).join(',');\n\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each(channel.split(','), function(ch) {\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                } );\n\n                var CB_CALLED = true;\n                if (READY) {\n                    CB_CALLED = SELF['LEAVE'](leave_c, 0 , auth_key, callback, err);\n                }\n                if (!CB_CALLED) callback({action : \"leave\"});\n            }\n\n            if (channel_group) {\n\n                // Prepare channel group(s)\n                var leave_gc = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group;\n                } ).join(',');\n\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                } );\n\n                var CB_CALLED = true;\n                if (READY) {\n                    CB_CALLED = SELF['LEAVE_GROUP'](leave_gc, 0 , auth_key, callback, err);\n                }\n                if (!CB_CALLED) callback({action : \"leave\"});\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, windowing);\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   debug    = args['debug']\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                debug    : debug,\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   params\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n            clearTimeout(PRESENCE_HB_TIMEOUT);\n        },\n        'shutdown': function () {\n            SELF['stop_timers']();\n            shutdown && shutdown();\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.16'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n\nfunction sendBeacon(url) {\n    if (!('sendBeacon' in navigator)) return false;\n\n    return navigator['sendBeacon'](url);\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['sendBeacon'] = sendBeacon;\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/pubnub/web/pubnub.js\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 45\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_46__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_46__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 46\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}